{"version":3,"sources":["components/Navbar.jsx","context/alert/alertContext.js","context/github/githubContext.js","components/Search.jsx","components/Card.jsx","pages/Home.jsx","components/Repos.jsx","pages/Profile.jsx","pages/About.jsx","components/Alert.jsx","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","e","key","hide","clearUsers","trim","search","show","Card","user","loading","CircularProgress","src","avatar_url","alt","login","Home","users","map","id","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","About","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","instance","axios","baseURL","client_id","process","client_secret","GithubState","a","setLoading","get","response","data","items","App","basename","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8b68452d.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom';\n\nconst Navbar = (props) => {\n    return <nav className=\"navbar navbar-dark bg-secondary navbar-expand-md\">\n        <div className=\"navbar-brand\">\n            Github Поиск\n        </div>\n        <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n                <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\n            </li>\n        </ul>\n    </nav>\n}\n\nexport default Navbar;","import {createContext} from \"react\";\r\n\r\nexport const AlertContext = createContext()","import {createContext} from \"react\";\r\n\r\nexport const GithubContext = createContext()","import React, {useContext, useState} from 'react'\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {GithubContext} from \"../context/github/githubContext\";\r\n\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('');\r\n    const alert = useContext(AlertContext);\r\n    const github = useContext(GithubContext)\r\n\r\n    const onSubmit = e => {\r\n        if (e.key !== 'Enter') {\r\n            return\r\n        }\r\n        alert.hide();\r\n        github.clearUsers();\r\n        value.trim() ? github.search(value.trim()) : alert.show('Введите данные пользователя')\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Введите ник пользователя...\"\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n                onKeyPress={onSubmit}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {GithubContext} from \"../context/github/githubContext\";\r\n\r\nexport const Card = ({user}) => {\r\n    const {loading} = useContext(GithubContext)\r\n\r\n    return <div className=\"card\">\r\n        {loading ? <CircularProgress /> : <img src={user.avatar_url} alt={''} className=\"card-img-top\"/>}\r\n     {/*   <img src={user.avatar_url} alt={''} className=\"card-img-top\"/>*/}\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{user.login}</h5>\r\n            <Link to={'/profile/'+ user.login} className=\"btn btn-primary\">Открыть</Link>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {Fragment, useContext} from 'react'\nimport {Search} from \"../components/Search\";\nimport {Card} from \"../components/Card\";\nimport {GithubContext} from \"../context/github/githubContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport const Home = () => {\n    const {loading, users} = useContext(GithubContext)\n\n    return (\n        <Fragment>\n            <Search/>\n            <div className='row'>\n                {loading ? <CircularProgress/> : users.map(user => (\n                    <div className=\"col-sm-4 mb-4\" key={user.id}>\n                        <Card user={user}/>\n                    </div>\n                ))}\n            </div>\n        </Fragment>\n    )\n}","import React, {Fragment} from 'react'\r\n\r\nexport const Repos = ({repos}) => (\r\n    <Fragment>\r\n        {repos.map(repo => (\r\n            <div className='card mb-3' key={repo.id}>\r\n                <h5>\r\n                    <a href={repo.html_url}\r\n                       rel='nooper noreferrer'\r\n                       target='_blank'>{repo.name}</a>\r\n                </h5>\r\n            </div>\r\n        ))}\r\n    </Fragment>\r\n)\r\n\r\n","import React, {Fragment, useContext, useEffect} from 'react'\nimport {GithubContext} from \"../context/github/githubContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {Link} from \"react-router-dom\";\nimport {Repos} from \"../components/Repos\";\n\nexport const Profile = ({match}) => {\n    const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\n    const urlName = match.params.name\n\n    useEffect(() => {\n        getUser(urlName);\n        getRepos(urlName)\n    }, [])\n\n    if (loading) {\n        return <CircularProgress/>\n    }\n\n    const {\n        name, company, avatar_url, location, bio, blog, login,\n        html_url, followers, following, public_repos, public_gists\n    } = user\n\n    return (\n        <Fragment>\n            <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\n\n            <div className=\"card mb-4\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-4 text-center\">\n                            <img\n                                src={avatar_url}\n                                alt={name}\n                                style={{width: '200px'}}\n                            />\n                            <h1 className='mt-1'>{name}</h1>\n                            {location && <p>Местоположение: {location}</p>}\n                        </div>\n                        <div className=\"col\">\n                            {\n                                bio && <Fragment>\n                                    <h3>BIO</h3>\n                                    <p>{bio}</p>\n                                </Fragment>\n                            }\n                            <a\n                                href={html_url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"btn btn-dark\"\n                            >Открыть профиль</a>\n                            <ul>\n                                {login && <li className='mt-2'>\n                                    <strong>Username: </strong> {login}\n                                </li>}\n\n                                {company && <li>\n                                    <strong>Компания: </strong> {company}\n                                </li>}\n\n                                {blog && <li>\n                                    <strong>Website: </strong> {blog}\n                                </li>}\n                            </ul>\n\n                            <div className=\"badge badge-primary mr-1\">Подписчики: {followers}</div>\n                            <div className=\"badge badge-success mr-1\">Подписан: {following}</div>\n                            <div className=\"badge badge-info mr-1\">Репозитории: {public_repos}</div>\n                            <div className=\"badge badge-dark mr-1\">Gists: {public_gists}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Repos repos={repos} />\n        </Fragment>\n    )\n}","import React from 'react'\n\nexport const About = () => {\n    return (\n        <div className=\"jumbotron\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Информация</h1>\n                <p className=\"lead\">Версия приложения: <strong>0.1</strong></p>\n            </div>\n        </div>\n    )\n}","import React, {useContext} from 'react'\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n    if (!alert) return null\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\r\n                role=\"alert\">\r\n                {alert.text}\r\n                <button type=\"button\"\r\n                        className=\"close\"\r\n                        aria-label=\"Close\"\r\n                        onClick={hide}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: state => state\r\n\r\n}\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action);\r\n}","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const SET_LOADING = 'SET_LOADING';","import React, {useReducer} from \"react\";\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\nimport {alertReducer} from \"./alertReducer\";\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n    const show = (text, type = 'secondary') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {type, text}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AlertContext.Provider value={{hide, show, alert: state}}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]:state => ({...state, users: []}),\r\n    DEFAULT: state => state\r\n\r\n}\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action);\r\n}","import React, {useReducer} from \"react\";\r\nimport {GithubContext} from \"./githubContext\";\r\nimport {githubReducer} from \"./githubReducer\";\r\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\r\nimport * as axios from \"axios\";\r\n\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.github.com/',\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET\r\n})\r\n\r\nexport const GithubState = ({children}) => {\r\n    let initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n        const response = await instance.get(`/search/users?q=${value}&client_id&client_secret}`)\r\n\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading()\r\n        const response = await instance.get(`/users/${name}?client_id&client_secret`)\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n        const response = await instance.get(`/users/${name}/repos?per_page=5&client_id&client_secret`)\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const {user, users, repos, loading} = state;\r\n    const clearUsers = () => dispatch({type: CLEAR_USERS})\r\n    const setLoading = () => dispatch({type: SET_LOADING})\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            setLoading, clearUsers, getRepos, getUser, search, user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport {Switch, Route, HashRouter} from 'react-router-dom';\nimport {Home} from './pages/Home.jsx';\nimport {Profile} from \"./pages/Profile\";\nimport {About} from \"./pages/About\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {GithubState} from \"./context/github/GithubState\";\n\nconst App = () => {\n    return (\n        <GithubState>\n            <AlertState>\n                <HashRouter basename={process.env.PUBLIC_URL}>\n                    <Navbar/>\n                    <div className=\"container pt-5\">\n                        <Alert alert={{text: 'test'}}/>\n                        <Switch>\n                            <Route path='/' exact component={Home}  />\n                            <Route path='/about' component={About}/>\n                            <Route path='/profile/:name' component={Profile}/>\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </AlertState>\n        </GithubState>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}